#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
最大路径和 I
从下面展示的三角形的顶端出发，不断移动到在下一行与其相邻的元素，能够得到的最大路径和是23。

       3
      7 4
     2 4 6
    8 5 9 3

如上图，最大路径和为 3 + 7 + 4 + 9 = 23。

求从下面展示的三角形顶端出发到达底部，所能够得到的最大路径和：

 ↓---↓

注意： 在这个问题中，由于只有16384条路径，通过尝试所有的路径来解决问题是可行的。但是，对于第67题，虽然是一道相同类型的题目，但是三角形将拥有一百行，此时暴力破解将不能解决，而需要一个更加聪明的办法！;o)

用倒数第二行，每个数都能往下分别加2个近邻的数，留下最大的，成为新的倒数第二行（重复动作）；从最下面一层往上面算，最后加出来的数就是最大路径和
"""

ask = '''75
95 64
17 47 82
18 35 87 10
20 04 82 47 65
19 01 23 75 03 34
88 02 77 73 07 63 67
99 65 04 28 06 16 70 92
41 41 26 56 83 40 80 70 33
41 48 72 33 47 32 37 16 94 29
53 71 44 65 25 43 91 52 97 51 14
70 11 33 28 77 73 17 78 39 68 17 57
91 71 52 38 17 14 91 43 58 50 27 29 48
63 66 04 68 89 53 67 30 73 16 69 87 40 31
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23'''

# 处理下字符串
Tri = [ask.split("\n")[i].split(" ") for i in range(len(ask.split("\n")))]

# 从最底层往上两两相加，取最大值形成新的一排，最后的值就是最大值
for i in range(1, 15):
    Tri[-i - 1] = [max(int(Tri[-i - 1][j]) + int(Tri[-i][j]), int(Tri[-i - 1][j]) + int(Tri[-i][j + 1])) for j in
                   range(len(Tri[-i - 1]))]

result = Tri[0][0]