#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
奇周期平方根
所有的平方根写成如下连分数表示时都是周期性重复的：
N−−√=a0+1a1+1a2+1a3+…
N=a0+1a1+1a2+1a3+…
例如，让我们考虑√23：
23−−√=4+23−−√−4=4+1123√−4=4+11+23√−37
23=4+23−4=4+1123−4=4+11+23−37
如果我们继续这个过程，我们会得到如下的展开：
N−−√=4+11+13+11+18+…
N=4+11+13+11+18+…
这个过程可以总结如下：

a0=4, 123−−√−4=23−−√+47=1+23−−√−37
a0=4, 123−4=23+47=1+23−37

a1=1, 723−−√−3=7(23−−√+3)14=3+23−−√−32
a1=1, 723−3=7(23+3)14=3+23−32

a2=2, 223−−√−3=2(23−−√+3)14=1+23−−√−47
a2=2, 223−3=2(23+3)14=1+23−47

a3=1, 723−−√−4=7(23−−√+4)7=8+23−−√−4
a3=1, 723−4=7(23+4)7=8+23−4

a4=8, 123−−√−4=23−−√+47=1+23−−√−37
a4=8, 123−4=23+47=1+23−37

a5=1, 723−−√−3=7(23−−√+3)14=3+23−−√−32
a5=1, 723−3=7(23+3)14=3+23−32

a6=3, 223−−√−3=2(23−−√+3)14=1+23−−√−47
a6=3, 223−3=2(23+3)14=1+23−47

a7=1, 723−−√−4=7(23−−√+4)7=8+23−−√−4
a7=1, 723−4=7(23+4)7=8+23−4
可以看出序列正在重复。我们将其简记为√23 = [4;(1,3,1,8)]，表示在此之后(1,3,1,8)无限循环。

前10个（无理数）平方根的连分数表示是：

√2=[1;(2)]，周期=1
√3=[1;(1,2)]，周期=2
√5=[2;(4)]，周期=1
√6=[2;(2,4)]，周期=2
√7=[2;(1,1,1,4)]，周期=4
√8=[2;(1,4)]，周期=2
√10=[3;(6)]，周期=1
√11=[3;(3,6)]，周期=2
√12= [3;(2,6)]，周期=2
√13=[3;(1,1,1,1,6)]，周期=5

在N ≤ 13中，恰好有4个连分数表示的周期是奇数。

在N ≤ 10000中，有多少个连分数表示的周期是奇数？
"""
import math

def xxx():
    """
    a = 整数 + 无理数
    d = 整数
    c = 无理数
    :return:
    """

    result = 0
    for test_num in range(1, 10001):
        # 消除平方数
        sqrt_num = int(math.sqrt(test_num))
        if sqrt_num * sqrt_num == test_num:
            continue

        check = set()  # 排除非重复的情况

        a = test_num
        b = -sqrt_num
        c = 1
        count = 0
        # 模拟过程
        while True:
            nc = a - b * b  # test_num - (-sqrt_num)**2 即获得无理数部分
            nc /= c
            nd = int((math.sqrt(a) - b) / nc)  # (√3+1)/(√3+1)(√3-1) =(√3+1)/2
            nb = -b - nd * nc  # 剩下的无理数
            t = (nb, nc, nd)  #  nb 开方取的整数 nc 新分式的分母 nd 新分式的整数部分
            # 构造下一个无理数部分
            b = nb
            c = nc
            # 检查是否开始重复
            if t not in check:
                count += 1
                check.add(t)
            else:  # 开始重复则退出
                break
        # 奇数周期
        if count % 2 != 0:
            result += 1
    return result

print(xxx())