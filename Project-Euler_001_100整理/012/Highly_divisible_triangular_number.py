#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
高度可约的三角形数
三角形数数列是通过逐个加上自然数来生成的。例如，第7个三角形数是 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28。

三角形数数列的前十项分别是：
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, …
让我们列举出前七个三角形数的所有约数：

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
我们可以看出，28是第一个拥有超过5个约数的三角形数。

第一个拥有超过500个约数的三角形数是多少？
"""

from itertools import count

def divisor(num):
    """
        一个数的约数数量是其开方后的数字范围内能获得的约数数量*2
        比如一个数的根+1的平方肯定大于这个数，所以他的根+1的范围内的约数的商肯定大于根
        比如28平方根为5,5+1范围内，能被28整除的是1，2，4，对应的商为7,14,28
    """
    ll = []
    for j in range(1, int(num**0.5)+1):
        if num % j == 0:
            ll.append(j)
    if len(ll) > 250:
        return True

a = 0
for i in count():
    a += i
    if divisor(a):
        print(a)
        break

