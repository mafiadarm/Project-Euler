#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
平方根逼近
2的平方根可以用一个无限连分数表示：
√ 2 = 1 + 1/(2 + 1/(2 + 1/(2 + … ))) = 1.414213…
将连分数计算取前四次迭代展开式分别是：
1 + 1/2 = 3/2 = 1.5
1 + 1/(2 + 1/2) = 7/5 = 1.4
1 + 1/(2 + 1/(2 + 1/2)) = 17/12 = 1.41666…
1 + 1/(2 + 1/(2 + 1/(2 + 1/2))) = 41/29 = 1.41379…
接下来的三个迭代展开式分别是99/70、239/169和577/408，但是直到第八个迭代展开式1393/985，分子的位数第一次超过分母的位数。
在前一千个迭代展开式中，有多少个分数分子的位数多于分母的位数？

分析
可以看出规律为：3/2  7/5  17/12  41/29  99/70  239/169  577/408
第二个数字的分子为：第一个数字的分母和分子相加
第二个数字的分母为：第一个数字的分母*2加分子
所以只要测位数个数即可
"""

def xxx():
    li = [3, 2]
    count = 0
    for i in range(999):
        li[0], li[1] = li[0] + li[1] * 2, li[0] + li[1]
        if len(str(li[0])) > len(str(li[1])):
            count += 1
    return count